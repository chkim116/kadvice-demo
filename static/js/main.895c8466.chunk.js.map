{"version":3,"sources":["App.js","index.js"],"names":["App","useState","dailyAdvice","setDailyAdvice","useEffect","kadvice","daily","className","message","author","authorProfile","type","onClick","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMAoFeA,MAxEf,WAAgB,IAAD,EAC2BC,mBAAS,MADpC,mBACJC,EADI,KACSC,EADT,KAiDX,OA9CAC,qBAAU,WACND,EAAeE,IAAQC,WACxB,IA6CC,sBAAKC,UAAU,MAAf,UACKL,GACG,qCACI,qBAAKK,UAAU,UAAf,SAA0BL,EAAYM,UACtC,wBAAOD,UAAU,SAAjB,cAA4BL,EAAYO,OAAxC,OACA,6BACI,uBAAOF,UAAU,iBAAjB,SACKL,EAAYQ,qBAK7B,wBACIC,KAAK,SACLC,QAAS,kBAAMT,EAAeE,IAAQQ,WAF1C,wBCrEZC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,W","file":"static/js/main.895c8466.chunk.js","sourcesContent":["import kadvice from \"kadvice\";\nimport { useEffect, useState } from \"react\";\n\n// const setStorage = (key, value) => {\n//     localStorage.setItem(key, JSON.stringify(value));\n// };\n\n// const getStorage = (key) => {\n//     const item = localStorage.getItem(key);\n//     return JSON.parse(item);\n// };\n\nfunction App() {\n    const [dailyAdvice, setDailyAdvice] = useState(null);\n\n    useEffect(() => {\n        setDailyAdvice(kadvice.daily());\n    }, []);\n\n    // const advices = useMemo(() => {\n    //     return kadvice.get(2);\n    // }, []);\n\n    // const cnt = useMemo(() => {\n    //     return getStorage(\"cnt\");\n    // }, []);\n\n    // const [dailyAdvice, setDailyAdvice] = useState(advices[0]);\n\n    // useEffect(() => {\n    //     const midNight = getStorage(\"midnight\");\n    //     const curTime = new Date().getTime();\n\n    //     if (curTime >= midNight) {\n    //         setStorage(\"midnight\", new Date().setHours(24, 0, 0, 0));\n    //         if (advices[cnt + 1]) {\n    //             setStorage(\"cnt\", cnt + 1);\n    //             setDailyAdvice(advices[cnt + 1]);\n    //         } else {\n    //             setDailyAdvice(advices[0]);\n    //             setStorage(\"cnt\", 0);\n    //         }\n    //     }\n    // }, [advices, cnt]);\n\n    // useEffect(() => {\n    //     if (getStorage(\"midnight\")) {\n    //         return;\n    //     }\n\n    //     setStorage(\"midnight\", new Date().setHours(24, 0, 0, 0));\n    // }, []);\n\n    // useEffect(() => {\n    //     if (getStorage(\"cnt\")) {\n    //         return;\n    //     }\n\n    //     setStorage(\"cnt\", 0);\n    // }, []);\n\n    return (\n        <div className=\"app\">\n            {dailyAdvice && (\n                <>\n                    <div className=\"message\">{dailyAdvice.message}</div>\n                    <small className=\"author\">-{dailyAdvice.author}-</small>\n                    <em>\n                        <small className=\"author-profile\">\n                            {dailyAdvice.authorProfile}\n                        </small>\n                    </em>\n                </>\n            )}\n            <button\n                type=\"button\"\n                onClick={() => setDailyAdvice(kadvice.random())}\n            >\n                random\n            </button>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}